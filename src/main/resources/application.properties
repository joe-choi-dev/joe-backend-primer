# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection

#PROD
#spring.datasource.url=jdbc:postgres://finbnanovfnklw:21d6766aba2deca2c7ad5beece75908a0c5d2d8a3a3a4b6486c371215c5c4c08@ec2-54-235-247-209.compute-1.amazonaws.com:5432/d3824sjb611r93
#spring.datasource.username=finbnanovfnklw
#spring.datasource.password=21d6766aba2deca2c7ad5beece75908a0c5d2d8a3a3a4b6486c371215c5c4c08

#TEST
spring.datasource.username=joschoi
spring.datasource.password=postgres@123
spring.datasource.url=jdbc:postgresql://localhost:5432/springbootdb

spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=create-drop

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect